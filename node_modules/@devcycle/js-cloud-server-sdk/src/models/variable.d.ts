import { InferredVariableType, VariableKey, VariableType, VariableTypeAlias } from '@devcycle/types';
import { DVCVariableInterface, DVCVariableValue } from '../types';
export type VariableParam<T extends DVCVariableValue> = {
    key: string;
    defaultValue: T;
    value?: VariableTypeAlias<T>;
    type: VariableType;
    evalReason?: unknown;
    eval?: unknown;
};
export declare class DVCVariable<T extends DVCVariableValue, K extends VariableKey = VariableKey> implements DVCVariableInterface {
    key: K;
    value: InferredVariableType<K, T>;
    readonly defaultValue: T;
    readonly isDefaulted: boolean;
    readonly type: 'String' | 'Number' | 'Boolean' | 'JSON';
    readonly eval?: unknown;
    constructor(variable: VariableParam<T>);
}
