{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../../../sdk/js-cloud-server/src/types.ts"],"names":[],"mappings":"","sourcesContent":["import { DVCCustomDataJSON, VariableValue, DVCJSON } from '@devcycle/types'\n\nexport type DVCVariableValue = VariableValue\nexport type JSON = DVCJSON\nexport type { DVCJSON, DVCCustomDataJSON }\n\nexport type DVCVariableSet = Record<\n    string,\n    Omit<DVCVariableInterface, 'defaultValue' | 'isDefaulted'> & { _id: string }\n>\n\nexport interface DVCVariableInterface {\n    /**\n     * Unique \"key\" by Project to use for this Dynamic Variable.\n     */\n    readonly key: string\n\n    /**\n     * The value for this Dynamic Variable which will be set to the `defaultValue`\n     * if accessed before the SDK is fully Initialized\n     */\n    readonly value: DVCVariableValue\n\n    /**\n     * Default value set when creating the variable\n     */\n    readonly defaultValue: DVCVariableValue\n\n    /**\n     * If the `variable.value` is set to use the `defaultValue` this will be `true`.\n     */\n    readonly isDefaulted: boolean\n\n    /**\n     * The data type of this Dynamic variable, which will be one of:\n     * String, Number, Boolean, JSON\n     */\n    readonly type?: 'String' | 'Number' | 'Boolean' | 'JSON'\n\n    /**\n     * Evaluation Reason as to why the variable was segmented into a specific Feature and\n     * given this specific value\n     */\n    readonly eval?: unknown\n}\n\nexport interface DevCycleEvent {\n    /**\n     * type of the event\n     */\n    type: string\n\n    /**\n     * date event occurred according to client stored as time since epoch\n     */\n    date?: number\n\n    /**\n     * target / subject of event. Contextual to event type\n     */\n    target?: string\n\n    /**\n     * value for numerical events. Contextual to event type\n     */\n    value?: number\n\n    /**\n     * extra metadata for event. Contextual to event type\n     */\n    metaData?: Record<string, unknown>\n}\n\nexport interface DVCFeature {\n    readonly _id: string\n\n    readonly _variation: string\n    readonly variationKey: string\n    readonly variationName: string\n\n    readonly key: string\n\n    readonly type: string\n\n    readonly eval?: unknown\n}\n\nexport type DVCFeatureSet = Record<string, DVCFeature>\n"]}