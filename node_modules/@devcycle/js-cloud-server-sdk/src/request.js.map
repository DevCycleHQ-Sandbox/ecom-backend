{"version":3,"file":"request.js","sourceRoot":"","sources":["../../../../../../sdk/js-cloud-server/src/request.ts"],"names":[],"mappings":"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","sourcesContent":["import { DVCPopulatedUser } from './models/populatedUser'\nimport { DevCycleEvent } from './types'\nimport { DevCycleServerSDKOptions } from '@devcycle/types'\nimport { post } from '@devcycle/server-request'\n\nexport const HOST = '.devcycle.com'\n\nconst BUCKETING_BASE = 'https://bucketing-api'\nconst VARIABLES_PATH = '/v1/variables'\nconst FEATURES_PATH = '/v1/features'\nconst TRACK_PATH = '/v1/track'\nconst BUCKETING_URL = `${BUCKETING_BASE}${HOST}`\nconst EDGE_DB_QUERY_PARAM = '?enableEdgeDB='\n\nexport async function getAllFeatures(\n    user: DVCPopulatedUser,\n    sdkKey: string,\n    options: DevCycleServerSDKOptions,\n): Promise<Response> {\n    const baseUrl = `${\n        options.bucketingAPIURI || BUCKETING_URL\n    }${FEATURES_PATH}`\n    const postUrl = baseUrl.concat(\n        options.enableEdgeDB ? EDGE_DB_QUERY_PARAM.concat('true') : '',\n    )\n    return await post(\n        postUrl,\n        {\n            body: JSON.stringify(user),\n            retries: 5,\n        },\n        sdkKey,\n    )\n}\n\nexport async function getAllVariables(\n    user: DVCPopulatedUser,\n    sdkKey: string,\n    options: DevCycleServerSDKOptions,\n): Promise<Response> {\n    const baseUrl = `${\n        options.bucketingAPIURI || BUCKETING_URL\n    }${VARIABLES_PATH}`\n    const postUrl = baseUrl.concat(\n        options.enableEdgeDB ? EDGE_DB_QUERY_PARAM.concat('true') : '',\n    )\n    return await post(\n        postUrl,\n        {\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(user),\n            retries: 5,\n        },\n        sdkKey,\n    )\n}\n\nexport async function getVariable(\n    user: DVCPopulatedUser,\n    sdkKey: string,\n    variableKey: string,\n    options: DevCycleServerSDKOptions,\n): Promise<Response> {\n    const baseUrl = `${\n        options.bucketingAPIURI || BUCKETING_URL\n    }${VARIABLES_PATH}/${variableKey}`\n    const postUrl = baseUrl.concat(\n        options.enableEdgeDB ? EDGE_DB_QUERY_PARAM.concat('true') : '',\n    )\n    return await post(\n        postUrl,\n        {\n            body: JSON.stringify(user),\n            retries: 5,\n        },\n        sdkKey,\n    )\n}\n\nexport async function postTrack(\n    user: DVCPopulatedUser,\n    event: DevCycleEvent,\n    sdkKey: string,\n    options: DevCycleServerSDKOptions,\n): Promise<void> {\n    const baseUrl = `${options.bucketingAPIURI || BUCKETING_URL}${TRACK_PATH}`\n    const postUrl = baseUrl.concat(\n        options.enableEdgeDB ? EDGE_DB_QUERY_PARAM.concat('true') : '',\n    )\n    await post(\n        postUrl,\n        {\n            body: JSON.stringify({\n                user,\n                events: [event],\n            }),\n            retries: 5,\n        },\n        sdkKey,\n    )\n}\n"]}