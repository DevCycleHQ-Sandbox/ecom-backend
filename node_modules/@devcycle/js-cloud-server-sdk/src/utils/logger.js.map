{"version":3,"file":"logger.js","sourceRoot":"","sources":["../../../../../../../sdk/js-cloud-server/src/utils/logger.ts"],"names":[],"mappings":";;;;;;AAWA,4CAiBC;AA5BD,+DAAsC;AAGtC,MAAM,MAAM,GAAG,cAAc,CAAA;AAC7B,IAAY,YAKX;AALD,WAAY,YAAY;IACpB,iDAAK,CAAA;IACL,+CAAI,CAAA;IACJ,+CAAI,CAAA;IACJ,iDAAK,CAAA;AACT,CAAC,EALW,YAAY,4BAAZ,YAAY,QAKvB;AAED,SAAgB,gBAAgB,CAAC,OAAiC;IAC9D,MAAM,QAAQ,GACV,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,KAAI,IAAA,kBAAQ,EAAC,YAAY,CAAC,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,CAAC,CAAC;QACpD,CAAC,CAAC,YAAY,CAAC,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,CAAC;QAC9B,CAAC,CAAC,YAAY,CAAC,KAAK,CAAA;IAC5B,MAAM,SAAS,GAAG,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,SAAS,KAAI,OAAO,CAAC,GAAG,CAAA;IAEnD,MAAM,QAAQ,GAAG,CAAC,OAAe,EAAQ,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,OAAO,CAAC,CAAA;IACvE,gEAAgE;IAChE,MAAM,OAAO,GAAG,CAAC,OAAe,EAAQ,EAAE,GAAE,CAAC,CAAA;IAE7C,OAAO;QACH,KAAK,EAAE,YAAY,CAAC,KAAK,IAAI,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO;QAC1D,IAAI,EAAE,YAAY,CAAC,IAAI,IAAI,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO;QACxD,IAAI,EAAE,YAAY,CAAC,IAAI,IAAI,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO;QACxD,KAAK,EAAE,YAAY,CAAC,KAAK,IAAI,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO;KAC7D,CAAA;AACL,CAAC","sourcesContent":["import isNumber from 'lodash/isNumber'\nimport { DVCDefaultLoggerOptions, DVCLogger } from '@devcycle/types'\n\nconst prefix = '[DevCycle]: '\nexport enum DVCLogLevels {\n    debug,\n    info,\n    warn,\n    error,\n}\n\nexport function dvcDefaultLogger(options?: DVCDefaultLoggerOptions): DVCLogger {\n    const minLevel =\n        options?.level && isNumber(DVCLogLevels[options?.level])\n            ? DVCLogLevels[options?.level]\n            : DVCLogLevels.error\n    const logWriter = options?.logWriter || console.log\n\n    const writeLog = (message: string): void => logWriter(prefix + message)\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    const noOpLog = (message: string): void => {}\n\n    return {\n        error: DVCLogLevels.error >= minLevel ? writeLog : noOpLog,\n        warn: DVCLogLevels.warn >= minLevel ? writeLog : noOpLog,\n        info: DVCLogLevels.info >= minLevel ? writeLog : noOpLog,\n        debug: DVCLogLevels.debug >= minLevel ? writeLog : noOpLog,\n    }\n}\n"]}