import { DevCycleUser, DVCVariable } from '../../src/';
import { EvalHook } from './EvalHook';
import { HookContext } from './HookContext';
import { DVCLogger } from '@devcycle/types';
import { VariableValue as DVCVariableValue } from '@devcycle/types';
export declare class EvalHooksRunner {
    private readonly hooks;
    private readonly logger?;
    constructor(hooks?: EvalHook[], logger?: DVCLogger | undefined);
    runHooksForEvaluation<T extends DVCVariableValue>(user: DevCycleUser, key: string, defaultValue: T, resolver: (context: HookContext<T>) => DVCVariable<T>): DVCVariable<T>;
    private runBefore;
    private runAfter;
    private runFinally;
    private runError;
    enqueue(hook: EvalHook): void;
}
