{"version":3,"file":"DevCycleMigrationStrategy.js","sourceRoot":"","sources":["../../../../../../../sdk/nodejs/src/open-feature/DevCycleMigrationStrategy.ts"],"names":[],"mappings":";;;AAAA,wDAKgC;AAEhC,gEAIoC;AAEpC;;;;;;GAMG;AACH,MAAa,yBAA0B,SAAQ,mCAAkB;IACpD,0BAA0B,CAC/B,eAA2C,EAC3C,OAA0B,EAC1B,MAAmC;QAEnC,IACI,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,sBAAS,CAAC,cAAc,CAAC;YACvD,CAAC,SAAS,IAAI,MAAM;gBAChB,MAAM,CAAC,OAAO,CAAC,MAAM,KAAK,sCAAyB,CAAC,OAAO,CAAC,EAClE,CAAC;YACC,OAAO,IAAI,CAAA;QACf,CAAC;QACD,OAAO,KAAK,CAAA;IAChB,CAAC;CACJ;AAfD,8DAeC","sourcesContent":["import {\n    ErrorCode,\n    EvaluationContext,\n    FlagValue,\n    StandardResolutionReasons,\n} from '@openfeature/server-sdk'\n\nimport {\n    FirstMatchStrategy,\n    StrategyPerProviderContext,\n    ProviderResolutionResult,\n} from '@openfeature/multi-provider'\n\n/**\n * Extends FirstMatchStrategy to handle the DevCycle Provider, which returns DEFAULT for the \"flag not found\" case.\n * Return the first result that did not return a default value or indicate \"flag not found\".\n *\n * Note: To use this strategy with DevCycle features, ensure all targeting rules include an \"All Users\" rule\n * to avoid returning DEFAULT for known keys.\n */\nexport class DevCycleMigrationStrategy extends FirstMatchStrategy {\n    override shouldEvaluateNextProvider<T extends FlagValue>(\n        strategyContext: StrategyPerProviderContext,\n        context: EvaluationContext,\n        result: ProviderResolutionResult<T>,\n    ): boolean {\n        if (\n            this.hasErrorWithCode(result, ErrorCode.FLAG_NOT_FOUND) ||\n            ('details' in result &&\n                result.details.reason === StandardResolutionReasons.DEFAULT)\n        ) {\n            return true\n        }\n        return false\n    }\n}\n"]}