{"version":3,"file":"request.js","sourceRoot":"","sources":["../../../../../../sdk/nodejs/src/request.ts"],"names":[],"mappings":";;;AAOA,sCAgBC;AAvBD,6DAA+C;AAGlC,QAAA,IAAI,GAAG,eAAe,CAAA;AACtB,QAAA,SAAS,GAAG,gBAAgB,CAAA;AAC5B,QAAA,WAAW,GAAG,kBAAkB,CAAA;AAEtC,KAAK,UAAU,aAAa,CAC/B,MAAiB,EACjB,MAAc,EACd,WAAqC,EACrC,qBAA8B;IAE9B,MAAM,GAAG,GAAG,qBAAqB;QAC7B,CAAC,CAAC,GAAG,qBAAqB,GAAG,mBAAW,EAAE;QAC1C,CAAC,CAAC,GAAG,iBAAS,GAAG,YAAI,GAAG,mBAAW,EAAE,CAAA;IACzC,OAAO,MAAM,IAAA,qBAAI,EACb,GAAG,EACH;QACI,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC;KAC/C,EACD,MAAM,CACT,CAAA;AACL,CAAC","sourcesContent":["import { post } from '@devcycle/server-request'\nimport { DVCLogger, SDKEventBatchRequestBody } from '@devcycle/types'\n\nexport const HOST = '.devcycle.com'\nexport const EVENT_URL = 'https://events'\nexport const EVENTS_PATH = '/v1/events/batch'\n\nexport async function publishEvents(\n    logger: DVCLogger,\n    sdkKey: string,\n    eventsBatch: SDKEventBatchRequestBody,\n    eventsBaseURLOverride?: string,\n): Promise<Response> {\n    const url = eventsBaseURLOverride\n        ? `${eventsBaseURLOverride}${EVENTS_PATH}`\n        : `${EVENT_URL}${HOST}${EVENTS_PATH}`\n    return await post(\n        url,\n        {\n            body: JSON.stringify({ batch: eventsBatch }),\n        },\n        sdkKey,\n    )\n}\n"]}