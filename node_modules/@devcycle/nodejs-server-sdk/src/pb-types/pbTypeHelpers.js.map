{"version":3,"file":"pbTypeHelpers.js","sourceRoot":"","sources":["../../../../../../../sdk/nodejs/src/pb-types/pbTypeHelpers.ts"],"names":[],"mappings":";;AAoCA,wDAeC;AAnDD,2CAA0E;AAC1E,mFAAmE;AAMnE,SAAS,qBAAqB,CAC1B,QAAsC;IAEtC,QAAQ,QAAQ,CAAC,IAAI,EAAE,CAAC;QACpB,KAAK,yCAAa,CAAC,eAAe,CAAC,OAAO;YACtC,OAAO;gBACH,IAAI,EAAE,oBAAY,CAAC,OAAO;gBAC1B,KAAK,EAAE,QAAQ,CAAC,SAAS;aAC5B,CAAA;QACL,KAAK,yCAAa,CAAC,eAAe,CAAC,MAAM;YACrC,OAAO;gBACH,IAAI,EAAE,oBAAY,CAAC,MAAM;gBACzB,KAAK,EAAE,QAAQ,CAAC,WAAW;aAC9B,CAAA;QACL,KAAK,yCAAa,CAAC,eAAe,CAAC,MAAM;YACrC,OAAO;gBACH,IAAI,EAAE,oBAAY,CAAC,MAAM;gBACzB,KAAK,EAAE,QAAQ,CAAC,WAAW;aAC9B,CAAA;QACL,KAAK,yCAAa,CAAC,eAAe,CAAC,IAAI;YACnC,OAAO;gBACH,IAAI,EAAE,oBAAY,CAAC,IAAI;gBACvB,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC;aAC1C,CAAA;QACL;YACI,MAAM,IAAI,KAAK,CAAC,0BAA0B,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAA;IAClE,CAAC;AACL,CAAC;AAED,SAAgB,sBAAsB,CAClC,QAAsC;IAEtC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,qBAAqB,CAAC,QAAQ,CAAC,CAAA;IAEvD,OAAO;QACH,GAAG,EAAE,QAAQ,CAAC,GAAG;QACjB,IAAI;QACJ,GAAG,EAAE,QAAQ,CAAC,GAAG;QACjB,KAAK;QACL,UAAU,EACN,CAAC,QAAQ,CAAC,UAAU,IAAI,QAAQ,CAAC,UAAU,CAAC,MAAM;YAC9C,CAAC,CAAC,IAAI;YACN,CAAC,CAAC,QAAQ,CAAC,UAAU;KAChC,CAAA;AACL,CAAC","sourcesContent":["import { SDKVariable, VariableType, VariableValue } from '@devcycle/types'\nimport { ProtobufTypes } from '@devcycle/bucketing-assembly-script'\n\ntype GetVariableType = {\n    type: VariableType\n    value: VariableValue\n}\nfunction getVariableTypeFromPB(\n    variable: ProtobufTypes.SDKVariable_PB,\n): GetVariableType {\n    switch (variable.type) {\n        case ProtobufTypes.VariableType_PB.Boolean:\n            return {\n                type: VariableType.boolean,\n                value: variable.boolValue,\n            }\n        case ProtobufTypes.VariableType_PB.Number:\n            return {\n                type: VariableType.number,\n                value: variable.doubleValue,\n            }\n        case ProtobufTypes.VariableType_PB.String:\n            return {\n                type: VariableType.string,\n                value: variable.stringValue,\n            }\n        case ProtobufTypes.VariableType_PB.JSON:\n            return {\n                type: VariableType.json,\n                value: JSON.parse(variable.stringValue),\n            }\n        default:\n            throw new Error(`Unknown variable type: ${variable.type}`)\n    }\n}\n\nexport function pbSDKVariableTransform(\n    variable: ProtobufTypes.SDKVariable_PB,\n): SDKVariable {\n    const { type, value } = getVariableTypeFromPB(variable)\n\n    return {\n        _id: variable._id,\n        type,\n        key: variable.key,\n        value,\n        evalReason:\n            !variable.evalReason || variable.evalReason.isNull\n                ? null\n                : variable.evalReason,\n    }\n}\n"]}