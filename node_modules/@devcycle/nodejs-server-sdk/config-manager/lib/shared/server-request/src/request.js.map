{"version":3,"file":"request.js","sourceRoot":"","sources":["../../../../../../../../lib/shared/server-request/src/request.ts"],"names":[],"mappings":"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","sourcesContent":["// NOTE: This file is duplicated in \"sdk/js/src/RequestUtils\" because nx:rollup cant build non-external dependencies\n// from outside the root directory https://github.com/nrwl/nx/issues/10395\n\nimport fetchWithRetry, { RequestInitWithRetry } from 'fetch-retry'\n\nexport class ResponseError extends Error {\n    constructor(message: string) {\n        super(message)\n        this.name = 'ResponseError'\n    }\n\n    status: number\n}\n\nexport const exponentialBackoff: RequestInitWithRetry['retryDelay'] = (\n    attempt,\n) => {\n    const delay = Math.pow(2, attempt) * 100\n    const randomSum = delay * 0.2 * Math.random()\n    return delay + randomSum\n}\n\nexport type RequestInitConfig = RequestInit | RequestInitWithRetry\ntype retryOnRequestErrorFunc = (\n    retries: number,\n) => RequestInitWithRetry['retryOn']\n\nconst retryOnRequestError: retryOnRequestErrorFunc = (retries) => {\n    return (attempt, error, response) => {\n        if (attempt >= retries) {\n            return false\n        } else if (response && response?.status < 500) {\n            return false\n        }\n\n        return true\n    }\n}\n\nexport async function handleResponse(res: Response): Promise<Response> {\n    // res.ok only checks for 200-299 status codes\n    if (!res.ok && res.status >= 400) {\n        let error\n        try {\n            const response: any = await res.clone().json()\n            error = new ResponseError(\n                response.message || 'Something went wrong',\n            )\n        } catch (e) {\n            error = new ResponseError('Something went wrong')\n        }\n        error.status = res.status\n        throw error\n    }\n\n    return res\n}\n\nexport async function getWithTimeout(\n    url: string,\n    requestConfig: RequestInit | RequestInitWithRetry,\n    timeout: number,\n): Promise<Response> {\n    const controller = new AbortController()\n    const id = setTimeout(() => {\n        controller.abort()\n    }, timeout)\n    const response = await get(url, {\n        ...requestConfig,\n        signal: controller.signal,\n    })\n    clearTimeout(id)\n    return response\n}\n\nexport async function post(\n    url: string,\n    requestConfig: RequestInit | RequestInitWithRetry,\n    sdkKey: string,\n): Promise<Response> {\n    const [_fetch, config] = await getFetchAndConfig(requestConfig)\n    const postHeaders = {\n        ...config.headers,\n        Authorization: sdkKey,\n        'Content-Type': 'application/json',\n    }\n\n    const res = await _fetch(url, {\n        ...config,\n        headers: postHeaders,\n        method: 'POST',\n    })\n\n    return handleResponse(res)\n}\n\nexport async function patch(\n    url: string,\n    requestConfig: RequestInit | RequestInitWithRetry,\n    sdkKey: string,\n): Promise<Response> {\n    const [_fetch, config] = await getFetchAndConfig(requestConfig)\n    const patchHeaders = {\n        ...config.headers,\n        Authorization: sdkKey,\n        'Content-Type': 'application/json',\n    }\n\n    const res = await _fetch(url, {\n        ...config,\n        headers: patchHeaders,\n        method: 'PATCH',\n    })\n\n    return handleResponse(res)\n}\nexport async function get(\n    url: string,\n    requestConfig: RequestInit | RequestInitWithRetry,\n): Promise<Response> {\n    const [_fetch, config] = await getFetchAndConfig(requestConfig)\n    const headers = { ...config.headers, 'Content-Type': 'application/json' }\n\n    const res = await _fetch(url, {\n        ...config,\n        headers,\n        method: 'GET',\n    })\n\n    return handleResponse(res)\n}\n\nasync function getFetch() {\n    if (typeof fetch !== 'undefined') {\n        return fetch\n    }\n\n    return (await import('cross-fetch')).default\n}\n\nasync function getFetchWithRetry() {\n    const fetch = await getFetch()\n    return fetchWithRetry(fetch)\n}\n\ntype FetchClient = Awaited<ReturnType<typeof getFetch>>\ntype FetchAndConfig = [FetchClient, RequestInit]\n\nasync function getFetchAndConfig(\n    requestConfig: RequestInit | RequestInitWithRetry,\n): Promise<FetchAndConfig> {\n    const useRetries = 'retries' in requestConfig\n    if (useRetries && requestConfig.retries) {\n        const newConfig: RequestInitWithRetry = { ...requestConfig }\n        newConfig.retryOn =\n            newConfig.retryOn || retryOnRequestError(requestConfig.retries)\n        newConfig.retryDelay = exponentialBackoff\n        return [await getFetchWithRetry(), newConfig]\n    }\n\n    return [await getFetch(), requestConfig]\n}\n"]}