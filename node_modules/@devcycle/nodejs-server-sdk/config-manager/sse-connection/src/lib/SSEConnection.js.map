{"version":3,"file":"SSEConnection.js","sourceRoot":"","sources":["../../../../../../lib/shared/sse-connection/src/lib/SSEConnection.ts"],"names":[],"mappings":";;;;;;AACA,8DAAqC;AAQrC,MAAa,aAAa;IAGtB,YACY,GAAW,EACX,MAAiB,EACR,SAAiC;QAF1C,QAAG,GAAH,GAAG,CAAQ;QACX,WAAM,GAAN,MAAM,CAAW;QACR,cAAS,GAAT,SAAS,CAAwB;QAElD,IAAI,CAAC,cAAc,EAAE,CAAA;IACzB,CAAC;IAEO,cAAc;QAClB,IAAI,OAAO,qBAAW,KAAK,WAAW,EAAE,CAAC;YACrC,IAAI,CAAC,MAAM,CAAC,IAAI,CACZ,yDAAyD,CAC5D,CAAA;YACD,OAAM;QACV,CAAC;QACD,IAAI,CAAC,UAAU,GAAG,IAAI,qBAAW,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,CAAA;QACtE,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,CAAC,KAAK,EAAE,EAAE;YAClC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;QACxC,CAAC,CAAA;QACD,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,CAAC,GAAG,EAAE,EAAE;YAC9B,IAAI,CAAC,MAAM,CAAC,IAAI,CACZ,2DACI,GAAG,CAAC,MACR,cAAe,GAAW,CAAC,OAAO,EAAE,CACvC,CAAA;YACD,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAA;QACtC,CAAC,CAAA;QACD,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,GAAG,EAAE;YAC1B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAA;YACzC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAA;QAC3B,CAAC,CAAA;IACL,CAAC;IAED,WAAW;;QACP,OAAO,CAAA,MAAA,IAAI,CAAC,UAAU,0CAAE,UAAU,OAAK,MAAA,IAAI,CAAC,UAAU,0CAAE,IAAI,CAAA,CAAA;IAChE,CAAC;IAED,MAAM;QACF,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC;YACtB,IAAI,CAAC,KAAK,EAAE,CAAA;YACZ,IAAI,CAAC,cAAc,EAAE,CAAA;QACzB,CAAC;IACL,CAAC;IAED,KAAK;;QACD,MAAA,IAAI,CAAC,UAAU,0CAAE,KAAK,EAAE,CAAA;IAC5B,CAAC;CACJ;AAlDD,sCAkDC","sourcesContent":["import type { DVCLogger } from '@devcycle/types'\nimport EventSource from 'eventsource'\n\ntype SSEConnectionFunctions = {\n    onMessage: (message: unknown) => void\n    onOpen: () => void\n    onConnectionError: () => void\n}\n\nexport class SSEConnection {\n    private connection?: EventSource\n\n    constructor(\n        private url: string,\n        private logger: DVCLogger,\n        private readonly callbacks: SSEConnectionFunctions,\n    ) {\n        this.openConnection()\n    }\n\n    private openConnection() {\n        if (typeof EventSource === 'undefined') {\n            this.logger.warn(\n                'SSEConnection not opened. EventSource is not available.',\n            )\n            return\n        }\n        this.connection = new EventSource(this.url, { withCredentials: true })\n        this.connection.onmessage = (event) => {\n            this.callbacks.onMessage(event.data)\n        }\n        this.connection.onerror = (err) => {\n            this.logger.warn(\n                `SSEConnection warning. Connection failed. Error status: ${\n                    err.status\n                }, message: ${(err as any).message}`,\n            )\n            this.callbacks.onConnectionError()\n        }\n        this.connection.onopen = () => {\n            this.logger.debug('SSEConnection opened')\n            this.callbacks.onOpen()\n        }\n    }\n\n    isConnected(): boolean {\n        return this.connection?.readyState === this.connection?.OPEN\n    }\n\n    reopen(): void {\n        if (!this.isConnected()) {\n            this.close()\n            this.openConnection()\n        }\n    }\n\n    close(): void {\n        this.connection?.close()\n    }\n}\n"]}